{
  "openapi": "3.0.0",
  "info": {
    "title": "Rental Booking Platform API",
    "version": "1.0.0",
    "description": "API documentation for the rental booking platform"
  },
  "servers": [
    {
      "url": "http://localhost:5000/api",
      "description": "Local Development Server"
    },
    {
      "url": "https://lala-homes-be.onrender.com/api",
      "description": "Production Server"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "User Signup",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": { "type": "string" },
                  "lastName": { "type": "string" },
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string", "format": "password" }
                },
                "required": ["firstName", "lastName", "email", "password"]
              },
              "example": {
                "firstName": "John",
                "lastName": "Doe",
                "email": "john.doe@example.com",
                "password": "SecurePass123!"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "User registered successfully"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Email already exists"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "User Login",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string", "format": "password" }
                },
                "required": ["email", "password"]
              },
              "example": {
                "email": "john.doe@example.com",
                "password": "SecurePass123!"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "token": "your-jwt-token"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Invalid email or password"
                }
              }
            }
          }
        }
      }
    },
    "/property": {
      "get": {
        "summary": "Get all properties",
        "tags": ["Property"],
        "responses": {
          "200": { "description": "List of all properties" }
        }
      },
      "post": {
        "summary": "Create a property",
        "tags": ["Property"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "201": { "description": "Property created successfully" }
        }
      }
    },
    "/property/{id}": {
      "get": {
        "summary": "Get a single property",
        "tags": ["Property"],
        "responses": {
          "200": { "description": "Property details" },
          "404": { "description": "Property not found" }
        }
      },
      "put": {
        "summary": "Update a property",
        "tags": ["Property"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Property updated successfully" },
          "404": { "description": "Property not found" }
        }
      },
      "delete": {
        "summary": "Delete a property",
        "tags": ["Property"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Property deleted successfully" },
          "404": { "description": "Property not found" }
        }
      }
    },
    "/bookings": {
      "post": {
        "summary": "Create a booking",
        "tags": ["Bookings"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "201": { "description": "Booking created successfully" }
        }
      }
    },
    "/bookings/{id}": {
      "get": {
        "summary": "Get a booking",
        "tags": ["Bookings"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Booking details" },
          "404": { "description": "Booking not found" }
        }
      },
      "patch": {
        "summary": "Update a booking",
        "tags": ["Bookings"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Booking updated successfully" },
          "404": { "description": "Booking not found" }
        }
      },
      "delete": {
        "summary": "Delete a booking",
        "tags": ["Bookings"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Booking deleted successfully" },
          "404": { "description": "Booking not found" }
        }
      }
    },
    "/bookings/{id}/cancel": {
      "patch": {
        "summary": "Cancel a booking",
        "tags": ["Bookings"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Booking canceled successfully" },
          "404": { "description": "Booking not found" }
        }
      }
    },
    "/bookings/{id}/confirm": {
      "patch": {
        "summary": "Confirm a booking",
        "tags": ["Bookings"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Booking confirmed successfully" },
          "404": { "description": "Booking not found" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
